services:
  sql-agent:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: testing-blade-sql-agent
    restart: unless-stopped

    # Environment variables
    environment:
      # Database Configuration
      - DATABASE_URI=sqlite:///Chinook.db
      - DATABASE_TYPE=SQLite

      # LLM Configuration
      - LLM_MODEL=gpt-4o-mini
      - LLM_PROVIDER=openai
      - OPENAI_API_KEY=${OPENAI_API_KEY}

      # Agent Behavior Configuration
      - DEBUG_MODE=false
      - BATCH_MODE=true
      - RECURSION_LIMIT=80
      - TOP_K_RESULTS=5

    # Mount volumes for persistent data
    volumes:
      - ./Chinook.db:/app/Chinook.db:rw
      # Logs directory (optional - create locally first: mkdir logs)
      # - ./logs:/app/logs:rw

    # Interactive mode for CLI usage
    stdin_open: true
    tty: true

    # Network configuration
    networks:
      - sql-agent-network

    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Optional: PostgreSQL database service
  # Uncomment if you want to use PostgreSQL instead of SQLite
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: testing-blade-postgres
  #   restart: unless-stopped
  #   environment:
  #     - POSTGRES_DB=chinook
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #     - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - sql-agent-network
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

networks:
  sql-agent-network:
    driver: bridge
# Uncomment if using PostgreSQL
# volumes:
#   postgres_data:
